before_commands:
    - composer install
    - phpspec
tools:
    php_mess_detector:
        filter:
            excluded_paths: ['spec/*']
    php_cs_fixer:
        filter:
            excluded_paths: ['spec/*']
        config:
            level: psr2
    php_analyzer:
        filter:
            excluded_paths: ['spec/*']
        config:
            parameter_reference_check: { enabled: true }
            checkstyle: { enabled: true, no_trailing_whitespace: true, naming: { enabled: true, local_variable: '^[a-z][a-zA-Z0-9]*$', abstract_class_name: ^Abstract|Factory$, utility_class_name: 'Utils?$', constant_name: '^[A-Z][A-Z0-9]*(?:_[A-Z0-9]+)*$', property_name: '^[a-z][a-zA-Z0-9]*$', method_name: '^(?:[a-z]|__)[a-zA-Z0-9]*$', parameter_name: '^[a-z][a-zA-Z0-9]*$', interface_name: '^[A-Z][a-zA-Z0-9]*Interface$', type_name: '^[A-Z][a-zA-Z0-9]*$', exception_name: '^[A-Z][a-zA-Z0-9]*Exception$', isser_method_name: '^(?:is|has|should|may|supports)' } }
            unreachable_code: { enabled: true }
            check_access_control: { enabled: true }
            typo_checks: { enabled: true }
            check_variables: { enabled: true }
            suspicious_code: { enabled: true, overriding_parameter: true, overriding_closure_use: true, parameter_closure_use_conflict: true, parameter_multiple_times: true, non_existent_class_in_instanceof_check: true, non_existent_class_in_catch_clause: true, assignment_of_null_return: true, non_commented_switch_fallthrough: true, non_commented_empty_catch_block: true, overriding_private_members: true, use_statement_alias_conflict: true, precedence_in_condition_assignment: true }
            dead_assignments: { enabled: true }
            verify_php_doc_comments: { enabled: true, parameters: true, return: true, suggest_more_specific_types: true, ask_for_return_if_not_inferrable: false, ask_for_param_type_annotation: false }
            loops_must_use_braces: { enabled: true }
            check_usage_context: { enabled: true, method_call_on_non_object: { enabled: true, ignore_null_pointer: true }, foreach: { value_as_reference: true, traversable: true }, missing_argument: true, argument_type_checks: lenient }
            simplify_boolean_return: { enabled: false }
            phpunit_checks: { enabled: false }
            reflection_checks: { enabled: false }
            precedence_checks: { enabled: true, assignment_in_condition: true, comparison_of_bit_result: true }
            basic_semantic_checks: { enabled: false }
            doc_comment_fixes: { enabled: true }
            reflection_fixes: { enabled: false }
            use_statement_fixes: { enabled: true, remove_unused: true, preserve_multiple: false, order_alphabetically: false }
    php_code_sniffer:
        filter:
            excluded_paths: ['spec/*']
        config:
            ruleset: 'PSR2'
            sniffs: { generic: { white_space: { disallow_tab_indent_sniff: true, scope_indent_sniff: true }, php: { disallow_short_open_tag_sniff: true, lower_case_constant_sniff: true }, formatting: { multiple_statement_alignment_sniff: true, space_after_cast_sniff: true }, functions: { function_call_argument_spacing_sniff: true }, files: { one_class_per_file_sniff: true, line_endings_sniff: true }, commenting: { fixme_sniff: true, todo_sniff: true }, control_structures: { inline_control_structure_sniff: true }, naming_conventions: { camel_caps_function_name_sniff: true, constructor_name_sniff: true, upper_case_constant_name_sniff: true }, metrics: { cyclomatic_complexity_sniff: true, nesting_level_sniff: true } } }
    sensiolabs_security_checker: true
    php_cpd:
        excluded_dirs:
            - 'spec/*'
    php_loc: true
    php_pdepend: true
    external_code_coverage: false
